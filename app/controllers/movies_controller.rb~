class MoviesController < ApplicationController

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index
	@all_ratings = Movie.ratings    
    

    # First step: update session
    
    if params[:ratings].nil?
		puts 'RATINGS IS NIL'
        @filtered_ratings = @all_ratings
    else
        @filtered_ratings = params[:ratings].keys
        session[:ratings] = params[:ratings]
    end
    
    if params[:order].nil?
		puts 'ORDER IS NIL'
        @order = session[:order] # could be nil
    else
		puts 'ORDER NOT NIL'
        @order = params[:order]
        session[:order] = @order
    end
    # AT THIS POINT IN THE CODE, WE SHOULD HAVE @filtered_ratings hold the ratings we want to display
    # and @order should be set to the field we want to sort by.
    # We should also have have options stored inside session correctly.
    
    if params[:ratings].nil? and params[:order].nil? and (!session[:ratings].nil? or !session[:order].nil?)
		puts 'REDIRECTED'
        flash.keep
        redirect_to movies_path(:order => session[:order], :ratings => session[:ratings])
    else 
        @movies = Movie.find(:all, :conditions => {:rating => session[:ratings]}, :order => @order)
    end
  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
